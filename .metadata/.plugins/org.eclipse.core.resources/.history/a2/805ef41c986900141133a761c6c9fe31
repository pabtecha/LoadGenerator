package presentation;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicBorders.SplitPaneBorder;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JSeparator;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.BoxLayout;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import java.awt.GridBagLayout;
import javax.swing.JLabel;
import java.awt.GridBagConstraints;
import javax.swing.JTextField;
import java.awt.Insets;
import javax.swing.JSpinner;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Cursor;
import javax.swing.JCheckBox;
import java.awt.GridLayout;
import java.awt.BorderLayout;
import javax.swing.SpinnerNumberModel;
import javax.swing.border.LineBorder;
import java.awt.Color;
import javax.swing.JButton;

public class GuernicaGUI extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1757537006758067046L;
	private JPanel contentPane;
	private JTextField txtWLId;
	private JTextField txtFrom;
	private JTextField txtTo;
	private JTextField txtTProb;
	private JTextField txtNProb;
	private JTextField txtNID;
	private JSplitPane splitPane;
	private JScrollPane scrollPane;
	private JPanel panelWorkLoad; 
	private JCheckBox chckbxIsInitial;
	private JSpinner spnUsersNumber;
	private JButton btnAddTransition;
	private JButton btnAddNode;
	private JPanel panelTransition;
	private JPanel panelNode;
	
	
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GuernicaGUI frame = new GuernicaGUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public GuernicaGUI() {
		setMinimumSize(new Dimension(600, 300));
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 800, 600);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnArchivo = new JMenu("Archivo");
		menuBar.add(mnArchivo);
		
		JMenuItem mntmNuevo = new JMenuItem("Nuevo");
		mntmNuevo.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				createNewForm();
			}
		});
		mnArchivo.add(mntmNuevo);
		
		JMenuItem mntmAbrir = new JMenuItem("Abrir");
		mnArchivo.add(mntmAbrir);
		
		JMenuItem mntmGuardar = new JMenuItem("Guardar");
		mnArchivo.add(mntmGuardar);
		
		JSeparator separator = new JSeparator();
		mnArchivo.add(separator);
		
		JMenuItem mntmSalir = new JMenuItem("Salir");
		mnArchivo.add(mntmSalir);
		contentPane = new JPanel();
		contentPane.setMinimumSize(new Dimension(600, 300));
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new GridLayout(0, 1, 0, 0));
		
		splitPane = new JSplitPane();
		splitPane.setResizeWeight(1.0);
		splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
		contentPane.add(splitPane);
		
		scrollPane = new JScrollPane();
		splitPane.setLeftComponent(scrollPane);
		
		panelWorkLoad = new JPanel();
		panelWorkLoad.setMinimumSize(new Dimension(250, 100));
		splitPane.setRightComponent(panelWorkLoad);
		GridBagLayout gbl_panelWorkLoad = new GridBagLayout();
		gbl_panelWorkLoad.columnWidths = new int[]{90, 26, 216, 319, 0, 0};
		gbl_panelWorkLoad.rowHeights = new int[]{19, 20, 15, 188, 0};
		gbl_panelWorkLoad.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_panelWorkLoad.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panelWorkLoad.setLayout(gbl_panelWorkLoad);
		
		JLabel lblWorkloadId = new JLabel("Workload id:");
		GridBagConstraints gbc_lblWorkloadId = new GridBagConstraints();
		gbc_lblWorkloadId.anchor = GridBagConstraints.WEST;
		gbc_lblWorkloadId.insets = new Insets(0, 0, 5, 5);
		gbc_lblWorkloadId.gridx = 0;
		gbc_lblWorkloadId.gridy = 0;
		panelWorkLoad.add(lblWorkloadId, gbc_lblWorkloadId);
		
		txtWLId = new JTextField();
		GridBagConstraints gbc_txtWLId = new GridBagConstraints();
		gbc_txtWLId.anchor = GridBagConstraints.NORTH;
		gbc_txtWLId.fill = GridBagConstraints.HORIZONTAL;
		gbc_txtWLId.insets = new Insets(0, 0, 5, 5);
		gbc_txtWLId.gridwidth = 3;
		gbc_txtWLId.gridx = 1;
		gbc_txtWLId.gridy = 0;
		panelWorkLoad.add(txtWLId, gbc_txtWLId);
		txtWLId.setColumns(10);
		
		JLabel lblNumberOfUsers = new JLabel("Number of users:");
		GridBagConstraints gbc_lblNumberOfUsers = new GridBagConstraints();
		gbc_lblNumberOfUsers.anchor = GridBagConstraints.WEST;
		gbc_lblNumberOfUsers.insets = new Insets(0, 0, 5, 5);
		gbc_lblNumberOfUsers.gridwidth = 2;
		gbc_lblNumberOfUsers.gridx = 0;
		gbc_lblNumberOfUsers.gridy = 1;
		panelWorkLoad.add(lblNumberOfUsers, gbc_lblNumberOfUsers);
		
		spnUsersNumber = new JSpinner();
		spnUsersNumber.setPreferredSize(new Dimension(60, 20));
		spnUsersNumber.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		GridBagConstraints gbc_spnUsersNumber = new GridBagConstraints();
		gbc_spnUsersNumber.anchor = GridBagConstraints.NORTHWEST;
		gbc_spnUsersNumber.insets = new Insets(0, 0, 5, 5);
		gbc_spnUsersNumber.gridx = 2;
		gbc_spnUsersNumber.gridy = 1;
		panelWorkLoad.add(spnUsersNumber, gbc_spnUsersNumber);
		
		JLabel lblNode = new JLabel("Node");
		GridBagConstraints gbc_lblNode = new GridBagConstraints();
		gbc_lblNode.anchor = GridBagConstraints.NORTH;
		gbc_lblNode.fill = GridBagConstraints.HORIZONTAL;
		gbc_lblNode.insets = new Insets(0, 0, 5, 5);
		gbc_lblNode.gridx = 0;
		gbc_lblNode.gridy = 2;
		panelWorkLoad.add(lblNode, gbc_lblNode);
		
		JLabel lblTransition = new JLabel("Transition");
		GridBagConstraints gbc_lblTransition = new GridBagConstraints();
		gbc_lblTransition.anchor = GridBagConstraints.NORTHWEST;
		gbc_lblTransition.insets = new Insets(0, 0, 5, 5);
		gbc_lblTransition.gridx = 3;
		gbc_lblTransition.gridy = 2;
		panelWorkLoad.add(lblTransition, gbc_lblTransition);
		
		panelNode = new JPanel();
		panelNode.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
		GridBagConstraints gbc_panelNode = new GridBagConstraints();
		gbc_panelNode.fill = GridBagConstraints.BOTH;
		gbc_panelNode.insets = new Insets(0, 0, 0, 5);
		gbc_panelNode.gridwidth = 3;
		gbc_panelNode.gridx = 0;
		gbc_panelNode.gridy = 3;
		panelWorkLoad.add(panelNode, gbc_panelNode);
		GridBagLayout gbl_panelNode = new GridBagLayout();
		gbl_panelNode.columnWidths = new int[]{86, 82, 22, 40, 0};
		gbl_panelNode.rowHeights = new int[]{15, 0, 0, 0, 0, 0, 0, 0};
		gbl_panelNode.columnWeights = new double[]{0.0, 1.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_panelNode.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panelNode.setLayout(gbl_panelNode);
		
		JLabel lblId = new JLabel("ID:");
		GridBagConstraints gbc_lblId = new GridBagConstraints();
		gbc_lblId.anchor = GridBagConstraints.EAST;
		gbc_lblId.insets = new Insets(0, 0, 5, 5);
		gbc_lblId.gridx = 0;
		gbc_lblId.gridy = 1;
		panelNode.add(lblId, gbc_lblId);
		
		txtNID = new JTextField();
		GridBagConstraints gbc_txtNID = new GridBagConstraints();
		gbc_txtNID.insets = new Insets(0, 0, 5, 5);
		gbc_txtNID.fill = GridBagConstraints.HORIZONTAL;
		gbc_txtNID.gridx = 1;
		gbc_txtNID.gridy = 1;
		panelNode.add(txtNID, gbc_txtNID);
		txtNID.setColumns(10);
		
		chckbxIsInitial = new JCheckBox("is Initial");
		GridBagConstraints gbc_chckbxIsInitial = new GridBagConstraints();
		gbc_chckbxIsInitial.anchor = GridBagConstraints.EAST;
		gbc_chckbxIsInitial.insets = new Insets(0, 0, 5, 5);
		gbc_chckbxIsInitial.gridx = 0;
		gbc_chckbxIsInitial.gridy = 2;
		panelNode.add(chckbxIsInitial, gbc_chckbxIsInitial);
		
		JLabel lblProbability = new JLabel("Probability:");
		GridBagConstraints gbc_lblProbability = new GridBagConstraints();
		gbc_lblProbability.anchor = GridBagConstraints.EAST;
		gbc_lblProbability.insets = new Insets(0, 0, 5, 5);
		gbc_lblProbability.gridx = 0;
		gbc_lblProbability.gridy = 3;
		panelNode.add(lblProbability, gbc_lblProbability);
		
		txtNProb = new JTextField();
		GridBagConstraints gbc_txtNProb = new GridBagConstraints();
		gbc_txtNProb.insets = new Insets(0, 0, 5, 5);
		gbc_txtNProb.fill = GridBagConstraints.HORIZONTAL;
		gbc_txtNProb.gridx = 1;
		gbc_txtNProb.gridy = 3;
		panelNode.add(txtNProb, gbc_txtNProb);
		txtNProb.setColumns(10);
		
		btnAddNode = new JButton("Add Node");
		GridBagConstraints gbc_btnAddNode = new GridBagConstraints();
		gbc_btnAddNode.insets = new Insets(0, 0, 5, 5);
		gbc_btnAddNode.gridx = 1;
		gbc_btnAddNode.gridy = 5;
		panelNode.add(btnAddNode, gbc_btnAddNode);
		
		panelTransition = new JPanel();
		panelTransition.setBorder(new LineBorder(new Color(0, 0, 0), 1, true));
		GridBagConstraints gbc_panelTransition = new GridBagConstraints();
		gbc_panelTransition.insets = new Insets(0, 0, 0, 5);
		gbc_panelTransition.anchor = GridBagConstraints.EAST;
		gbc_panelTransition.fill = GridBagConstraints.VERTICAL;
		gbc_panelTransition.gridx = 3;
		gbc_panelTransition.gridy = 3;
		panelWorkLoad.add(panelTransition, gbc_panelTransition);
		GridBagLayout gbl_panelTransition = new GridBagLayout();
		gbl_panelTransition.columnWidths = new int[]{86, 82, 22, 40, 0};
		gbl_panelTransition.rowHeights = new int[]{15, 0, 0, 0, 0, 0, 0, 0};
		gbl_panelTransition.columnWeights = new double[]{0.0, 1.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_panelTransition.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panelTransition.setLayout(gbl_panelTransition);
		
		JLabel lblFrom = new JLabel("From:");
		GridBagConstraints gbc_lblFrom = new GridBagConstraints();
		gbc_lblFrom.insets = new Insets(0, 0, 5, 5);
		gbc_lblFrom.anchor = GridBagConstraints.NORTHEAST;
		gbc_lblFrom.gridx = 0;
		gbc_lblFrom.gridy = 1;
		panelTransition.add(lblFrom, gbc_lblFrom);
		
		txtFrom = new JTextField();
		GridBagConstraints gbc_txtFrom = new GridBagConstraints();
		gbc_txtFrom.insets = new Insets(0, 0, 5, 5);
		gbc_txtFrom.fill = GridBagConstraints.HORIZONTAL;
		gbc_txtFrom.gridx = 1;
		gbc_txtFrom.gridy = 1;
		panelTransition.add(txtFrom, gbc_txtFrom);
		txtFrom.setColumns(10);
		
		JLabel lblTo = new JLabel("To:");
		GridBagConstraints gbc_lblTo = new GridBagConstraints();
		gbc_lblTo.anchor = GridBagConstraints.NORTHEAST;
		gbc_lblTo.insets = new Insets(0, 0, 5, 5);
		gbc_lblTo.gridx = 0;
		gbc_lblTo.gridy = 2;
		panelTransition.add(lblTo, gbc_lblTo);
		
		txtTo = new JTextField();
		GridBagConstraints gbc_txtTo = new GridBagConstraints();
		gbc_txtTo.insets = new Insets(0, 0, 5, 5);
		gbc_txtTo.fill = GridBagConstraints.HORIZONTAL;
		gbc_txtTo.gridx = 1;
		gbc_txtTo.gridy = 2;
		panelTransition.add(txtTo, gbc_txtTo);
		txtTo.setColumns(10);
		
		JLabel lblProbability_1 = new JLabel("Probability:");
		GridBagConstraints gbc_lblProbability_1 = new GridBagConstraints();
		gbc_lblProbability_1.anchor = GridBagConstraints.NORTHEAST;
		gbc_lblProbability_1.insets = new Insets(0, 0, 5, 5);
		gbc_lblProbability_1.gridx = 0;
		gbc_lblProbability_1.gridy = 3;
		panelTransition.add(lblProbability_1, gbc_lblProbability_1);
		
		txtTProb = new JTextField();
		GridBagConstraints gbc_txtTProb = new GridBagConstraints();
		gbc_txtTProb.insets = new Insets(0, 0, 5, 5);
		gbc_txtTProb.fill = GridBagConstraints.HORIZONTAL;
		gbc_txtTProb.gridx = 1;
		gbc_txtTProb.gridy = 3;
		panelTransition.add(txtTProb, gbc_txtTProb);
		txtTProb.setColumns(10);
		
		btnAddTransition = new JButton("Add Transition");
		GridBagConstraints gbc_btnAddTransition = new GridBagConstraints();
		gbc_btnAddTransition.anchor = GridBagConstraints.NORTH;
		gbc_btnAddTransition.insets = new Insets(0, 0, 5, 5);
		gbc_btnAddTransition.gridx = 1;
		gbc_btnAddTransition.gridy = 5;
		panelTransition.add(btnAddTransition, gbc_btnAddTransition);
	}
	
	public void createNewForm()
	{
		
		
		
	}
}
